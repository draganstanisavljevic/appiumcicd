<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="MRSC02DQ6PVMD6R.local" failures="0" tests="3" name="iOS" time="0.04" errors="0" timestamp="2024-12-25T10:49:52 CET">
  <testcase classname="com.qa.tests.LoginTest" name="@BeforeSuite beforeSuite" time="0.055">
    <failure type="java.lang.RuntimeException" message="java.io.FileNotFoundException: logs/server.log (No such file or directory)">
      <![CDATA[java.lang.RuntimeException: java.io.FileNotFoundException: logs/server.log (No such file or directory)
at org.openqa.selenium.remote.service.DriverService$Builder.getLogOutput(DriverService.java:468)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:513)
at io.appium.java_client.service.local.AppiumDriverLocalService.buildService(AppiumDriverLocalService.java:91)
at com.qa.tests.LoginTest.getAppiumServer(LoginTest.java:105)
at com.qa.tests.LoginTest.beforeSuite(LoginTest.java:87)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
Caused by: java.io.FileNotFoundException: logs/server.log (No such file or directory)
at java.base/java.io.FileOutputStream.open0(Native Method)
at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:184)
at org.openqa.selenium.remote.service.DriverService$Builder.getLogOutput(DriverService.java:466)
... 22 more
... Removed 16 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.qa.tests.LoginTest" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="com.qa.tests.LoginTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.tests.LoginTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.tests.LoginTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.tests.LoginTest" name="@AfterClass afterClass" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="com.qa.tests.LoginTest" name="testInvalidPassword" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidPassword -->
  <testcase classname="com.qa.tests.LoginTest" name="testInvalidUsername" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidUsername -->
  <testcase classname="com.qa.tests.LoginTest" name="testValidUser" time="0.0">
    <skipped/>
  </testcase> <!-- testValidUser -->
</testsuite> <!-- iOS -->
